name: Build and Push Docker Image

on:
  release:
    types: released

env:
  GITHUB_IMAGE_NAME: ghcr.io/instrument-data-source/instrument-quote-data-source-srv
  DOCKER_HUB_IMAGE_NAME: docker.io/insonusk/instrument-data-source

jobs:
  testing:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:7.0
  
    services:
      postgres:
        image: postgres:14.3
  
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
  
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Run tests
        run: dotnet test --configuration Release --verbosity m --no-restore
        env: 
          ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=postgres;Username=postgres;Password=postgres"
  
  
  push-to-github-container-registry:
    runs-on: ubuntu-latest
    needs: testing
    steps:
      - name: Retrieve release version
        id: release_info
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
    
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            ${{ env.GITHUB_IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
            ${{ env.GITHUB_IMAGE_NAME }}:latest

  push-to-docker-hub:
    runs-on: ubuntu-latest
    needs: testing
    steps:
      - name: Retrieve release version
        id: release_info
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
    
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            ${{ env.DOCKER_HUB_IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
            ${{ env.DOCKER_HUB_IMAGE_NAME }}:latest